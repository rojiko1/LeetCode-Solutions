// first attempt

import java.math.BigInteger;

class Solution {

    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        BigInteger ten = new BigInteger("10");
        int pow = 0;
        BigInteger i1 = new BigInteger("0");
        BigInteger i2 = new BigInteger("0");
        ListNode current = l1;
        while (current != null) {
            i1 = i1.add(BigInteger.valueOf(current.val).multiply(ten.pow(pow)));
            current = current.next;
            pow++;
        }
        pow = 0;
        current = l2;
        while (current != null) {
            i2 = i2.add(BigInteger.valueOf(current.val).multiply(ten.pow(pow)));;
            current = current.next;
            pow++;
        }
        BigInteger answer = i1.add(i2);
        BigInteger mod_of_answer;
        mod_of_answer = answer.mod(ten);
        current = new ListNode(mod_of_answer.intValue());
        ListNode head = current;
        answer = answer.subtract(mod_of_answer);
        answer = answer.divide(ten);
        while (!answer.equals(BigInteger.valueOf(0))) {
            mod_of_answer = answer.mod(ten);
            current.next = new ListNode(mod_of_answer.intValue());
            current = current.next;
            answer = answer.subtract(mod_of_answer);
            answer = answer.divide(ten);
        }
        return head;
    }

}