class Solution {

    public ListNode rotateRight(ListNode head, int k) {
        if (head == null) {
            return head;
        }
        else if (head.next == null) {
            return head;
        }
        else {
            // find number of nodes
            ListNode curr = head;
            int listLength = 1;
            while (curr.next != null) {
                listLength++;
                curr = curr.next;
            }
            // create cyclical list
            curr.next = head;
            curr = head;
            // find new head node
            for (int i = 0; i < (listLength - (k % listLength) - 1); i++) {
                curr = curr.next;
            }
            // execute the moving maneuver
            head = curr.next;
            curr.next = null;
            return head;
        }
    }

}