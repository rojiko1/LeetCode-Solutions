class Solution {

    public boolean isValidBST(TreeNode root) {
        int[] minMax = minMax(root);
        return minMax[0] <= minMax[1];
    }

    private int[] minMax(TreeNode root) {
        int[] minMax = {1, -1};
        int[] left;
        int[] right;
        if (root.left == null) {
            minMax[0] = root.val;
        }
        else {
            left = minMax(root.left);
            if ((left[0] > left[1]) || (left[1] >= root.val)) {
                minMax[0] = 1;
                minMax[1] = -1;
                return minMax;
            }
            else {
                minMax[0] = left[0];
            }
        }
        if (root.right == null) {
            minMax[1] = root.val;
        }
        else {
            right = minMax(root.right);
            if ((right[0] > right[1]) || (right[0] <= root.val)) {
                minMax[0] = 1;
                minMax[1] = -1;
                return minMax;
            }
            else {
                minMax[1] = right[1];
            }
        }
        return minMax;
    }

}