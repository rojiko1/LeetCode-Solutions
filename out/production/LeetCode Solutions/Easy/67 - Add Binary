// first attempt

class Solution {

    public String addBinary(String a, String b) {
        StringBuilder result = new StringBuilder();
        int carry = 0;
        for (int i = 0; i < Math.max(a.length(), b.length()); i++) {
            int aDigit = 0;
            int bDigit = 0;
            if ((a.length() - i - 1) >= 0) {
                aDigit = Character.getNumericValue(a.charAt(a.length() - i - 1));
            }
            if ((b.length() - i - 1) >= 0) {
                bDigit = Character.getNumericValue(b.charAt(b.length() - i - 1));
            }
            result.insert(0, (aDigit + bDigit + carry) % 2);
            carry = (aDigit + bDigit + carry) / 2;
        }
        if (carry != 0) {
            result.insert(0, carry);
        }
        return result.toString();
    }

}

// second attempt

class Solution {

    public String addBinary(String a, String b) {
        StringBuilder result = new StringBuilder();
        int carry = 0;
        for (int i = 0; i < Math.max(a.length(), b.length()); i++) {
            int aDigit = 0;
            int bDigit = 0;
            if ((a.length() - i - 1) >= 0) {
                aDigit = Character.getNumericValue(a.charAt(a.length() - i - 1));
            }
            if ((b.length() - i - 1) >= 0) {
                bDigit = Character.getNumericValue(b.charAt(b.length() - i - 1));
            }
            result.append((aDigit + bDigit + carry) % 2);
            carry = (aDigit + bDigit + carry) / 2;
        }
        if (carry != 0) {
            result.append(carry);
        }
        return result.reverse().toString();
    }

}