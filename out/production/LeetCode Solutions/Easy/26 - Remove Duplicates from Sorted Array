// first attempt

class Solution {

    public int removeDuplicates(int[] nums) {
        int k = nums.length;
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i] == nums[i - 1]) {
                for (int j = i + 1; j < k; j++) {
                    nums[j - 1] = nums[j];
                }
                nums[k - 1] = nums[i - 1];
                k--;
            }
        }
        return k;
    }

}

// second attempt

class Solution {

    public int removeDuplicates(int[] nums) {
        int k = nums.length;
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i] == nums[i - 1]) {
                nums[i] = nums[k - 1];
                nums[k - 1] = nums[i - 1];
                k--;
            }
        }
        Arrays.sort(nums, 0, k);
        return k;
    }

}

// third attempt

class Solution {

    public int removeDuplicates(int[] nums) {
        int k = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > nums[i - 1]) {
                nums[k] = nums[i];
                k++;
            }
        }
        return k;
    }

}